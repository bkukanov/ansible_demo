---
  #Preparing connection
  # - set_fact: ansible_ssh_private_key_file="~/.ssh/demo.{{ hostvars[item].ec2_region }}.pem"
  #   with_items: "{{ inventory_hostname }}"
  - name: Clean known_hosts
    become: no
    local_action: shell ssh-keygen -f "$HOME/.ssh/known_hosts" -R {{ inventory_hostname }}
    ignore_errors: yes
  - name: Update known_hosts
    become: no
    local_action: shell ssh-keyscan -t rsa {{ inventory_hostname }} >> $HOME/.ssh/known_hosts 2>&1

  #Installing subutai
  - name: Downloading snap from Kurjun
    get_url: url=https://cdn.subut.ai:8338/kurjun/rest/file/get?name=subutai_4.0.0_amd64-dev.snap dest=/tmp/subutai.snap validate_certs=no force=yes
  # - name: Updating RH
  #   shell: subutai update rh
  #   ignore_errors: yes
  # - name: Updating MH
  #   shell: subutai update management

  - name: Installing snap
    shell: snappy install --allow-unauthenticated /tmp/subutai.snap
  - name: changing branch to dev
    shell: sed -i 's/branch =/branch = dev/' /apps/subutai/current/etc/agent.gcfg
  - name: Destoy Management Template  
    shell: subutai destroy management
    ignore_errors: yes
  - name: Unmount /mnt
    shell: umount /mnt
    ignore_errors: yes
  - name: Creating /mnt mount
    shell: btrfsinit {{second_drive}}
  - name: Importing Management Template
    shell: subutai import management

  # Register on Hub
  # - name: Wait SS Web Console Launch
  #   uri:
  #     url: "https://{{ inventory_hostname }}:8443/rest/v1/peer/inited"
  #     validate_certs: no
  #   register: result_url
  #   until: result_url.status == 200
  #   retries: 600
  #   delay: 1  
  # - name: Register Peer on Hub
  #   local_action: shell bash bin/register_hub.sh {{ inventory_hostname }}
  #   become: no

  #clean
  - name: Remove Downloaded snap
    file: path=/tmp/subutai.snap state=absent